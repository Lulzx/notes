declare global {
    interface Window {
        ___loader: {
            loadPage: (slug: string) => Promise<any>;
        };
    }
}
declare type ScrollState = {
    [slug: string]: {
        obstructed: boolean;
        overlay: boolean;
    };
};
export declare function useStackedPagesProvider<T>({ location, processPageQuery, firstPageSlug, pageWidth, }: {
    location: Location;
    processPageQuery?: (queryResult: any) => T | null;
    firstPageSlug?: string;
    pageWidth?: number;
}): (((node: HTMLDivElement) => void) | ScrollState | {
    slug: string;
    data: T;
}[] | ((to: any, index: any) => void) | import("react").Provider<{
    stackedPages: {
        slug: string;
        data: any;
    }[];
    navigateToStackedPage: (to: string, index?: number | undefined) => void;
}> | import("react").Provider<number>)[];
export declare function useStackedPages(): readonly [{
    slug: string;
    data: any;
}[], (to: string) => void, number];
export {};
