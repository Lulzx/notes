{"version":3,"file":"popover.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["/**\n * Welcome to @reach/popover!\n */\n\nimport React, { useRef, forwardRef, useEffect } from \"react\";\nimport Portal from \"@reach/portal\";\nimport { useRect, PRect } from \"@reach/rect\";\nimport { getOwnerDocument, useForkedRef } from \"@reach/utils\";\nimport tabbable from \"tabbable\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Popover\n */\nconst Popover = forwardRef<HTMLDivElement, PopoverProps>(function Popover(\n  props,\n  ref\n) {\n  return (\n    <Portal>\n      <PopoverImpl ref={ref} {...props} />\n    </Portal>\n  );\n});\n\nexport type PopoverProps = {\n  children: React.ReactNode;\n  targetRef: React.RefObject<HTMLElement>;\n  position?: Position;\n  /**\n   * Testing this API so we might accept additional nodes that apps can use to\n   * determine the position of the popover. One example where it may be useful\n   * is for positioning the popover of a listbox where the cursor rests on top\n   * of the selected option. Pretty sure this will change so don't use it\n   * anywehre in public yet!\n   */\n  unstable_observableRefs?: React.RefObject<PossibleNode>[];\n} & React.HTMLAttributes<HTMLDivElement>;\n\nif (__DEV__) {\n  Popover.displayName = \"Popover\";\n}\n\nexport default Popover;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * PopoverImpl\n *\n * Popover is conditionally rendered so we can't start measuring until it shows\n * up, so useRect needs to live down here not up in Popover\n */\nconst PopoverImpl = forwardRef<HTMLDivElement, PopoverProps>(\n  function PopoverImpl(\n    {\n      targetRef,\n      position = positionDefault,\n      unstable_observableRefs = [],\n      ...props\n    },\n    forwardedRef\n  ) {\n    const popoverRef = useRef<HTMLDivElement>(null);\n    const popoverRect = useRect(popoverRef);\n    const targetRect = useRect(targetRef);\n    const ref = useForkedRef(popoverRef, forwardedRef);\n\n    useSimulateTabNavigationForReactTree(targetRef, popoverRef);\n\n    return (\n      <div\n        data-reach-popover=\"\"\n        ref={ref}\n        {...props}\n        style={{\n          position: \"absolute\",\n          ...getStyles(\n            position,\n            targetRect,\n            popoverRect,\n            ...unstable_observableRefs\n          ),\n          ...props.style,\n        }}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  PopoverImpl.displayName = \"PopoverImpl\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction getStyles(\n  position: Position,\n  targetRect: PRect | null,\n  popoverRect: PRect | null,\n  ...unstable_observableRefs: React.RefObject<PossibleNode>[]\n): React.CSSProperties {\n  return popoverRect\n    ? position(\n        targetRect,\n        popoverRect,\n        ...unstable_observableRefs.map((ref) => ref.current)\n      )\n    : { visibility: \"hidden\" };\n}\n\nfunction getTopPosition(targetRect: PRect, popoverRect: PRect) {\n  const { directionUp } = getCollisions(targetRect, popoverRect);\n  return {\n    top: directionUp\n      ? `${targetRect.top - popoverRect.height + window.pageYOffset}px`\n      : `${targetRect.top + targetRect.height + window.pageYOffset}px`,\n  };\n}\n\nexport const positionDefault: Position = (targetRect, popoverRect) => {\n  if (!targetRect || !popoverRect) {\n    return {};\n  }\n\n  const { directionRight } = getCollisions(targetRect, popoverRect);\n  return {\n    left: directionRight\n      ? `${targetRect.right - popoverRect.width + window.pageXOffset}px`\n      : `${targetRect.left + window.pageXOffset}px`,\n    ...getTopPosition(targetRect, popoverRect),\n  };\n};\n\nexport const positionRight: Position = (targetRect, popoverRect) => {\n  if (!targetRect || !popoverRect) {\n    return {};\n  }\n\n  const { directionLeft } = getCollisions(targetRect, popoverRect);\n  return {\n    left: directionLeft\n      ? `${targetRect.left + window.pageXOffset}px`\n      : `${targetRect.right - popoverRect.width + window.pageXOffset}px`,\n    ...getTopPosition(targetRect, popoverRect),\n  };\n};\n\nexport const positionMatchWidth: Position = (targetRect, popoverRect) => {\n  if (!targetRect || !popoverRect) {\n    return {};\n  }\n\n  return {\n    width: targetRect.width,\n    left: targetRect.left,\n    ...getTopPosition(targetRect, popoverRect),\n  };\n};\n\nexport function getCollisions(\n  targetRect: PRect,\n  popoverRect: PRect,\n  offsetLeft: number = 0,\n  offsetBottom: number = 0\n) {\n  const collisions = {\n    top: targetRect.top - popoverRect.height < 0,\n    right: window.innerWidth < targetRect.left + popoverRect.width - offsetLeft,\n    bottom:\n      window.innerHeight <\n      targetRect.bottom + popoverRect.height - offsetBottom,\n    left: targetRect.left + targetRect.width - popoverRect.width < 0,\n  };\n\n  const directionRight = collisions.right && !collisions.left;\n  const directionLeft = collisions.left && !collisions.right;\n  const directionUp = collisions.bottom && !collisions.top;\n  const directionDown = collisions.top && !collisions.bottom;\n\n  return { directionRight, directionLeft, directionUp, directionDown };\n}\n\n// Heads up, my jQuery past haunts this function. This hook scopes the tab\n// order to the React element tree, instead of the DOM tree. This way, when the\n// user navigates with tab from the targetRef, the tab order moves into the\n// popup, and then out of the popup back to the rest of the document.\n// (We call targetRef, triggerRef inside this function to avoid confusion with\n// event.target)\nfunction useSimulateTabNavigationForReactTree<\n  T extends HTMLElement = HTMLElement,\n  P extends HTMLElement = HTMLElement\n>(triggerRef: React.RefObject<T>, popoverRef: React.RefObject<P>) {\n  const ownerDocument = getOwnerDocument(triggerRef.current);\n\n  function handleKeyDown(event: KeyboardEvent) {\n    if (\n      event.key === \"Tab\" &&\n      popoverRef.current &&\n      tabbable(popoverRef.current).length === 0\n    ) {\n      return;\n    }\n\n    if (event.key === \"Tab\" && event.shiftKey) {\n      if (shiftTabbedFromElementAfterTrigger(event)) {\n        focusLastTabbableInPopover(event);\n      } else if (shiftTabbedOutOfPopover(event)) {\n        focusTriggerRef(event);\n      } else if (shiftTabbedToBrowserChrome(event)) {\n        disableTabbablesInPopover();\n      }\n    } else if (event.key === \"Tab\") {\n      if (tabbedFromTriggerToPopover()) {\n        focusFirstPopoverTabbable(event);\n      } else if (tabbedOutOfPopover()) {\n        focusTabbableAfterTrigger(event);\n      } else if (tabbedToBrowserChrome(event)) {\n        disableTabbablesInPopover();\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (ownerDocument) {\n      ownerDocument.addEventListener(\"keydown\", handleKeyDown);\n      return () => {\n        ownerDocument.removeEventListener(\"keydown\", handleKeyDown);\n      };\n    }\n    return;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function getElementAfterTrigger() {\n    const elements = ownerDocument && tabbable(ownerDocument);\n    const targetIndex =\n      elements && triggerRef.current\n        ? elements.indexOf(triggerRef.current)\n        : -1;\n    const elementAfterTrigger = elements && elements[targetIndex + 1];\n    return popoverRef.current &&\n      popoverRef.current.contains(elementAfterTrigger || null)\n      ? false\n      : elementAfterTrigger;\n  }\n\n  function tabbedFromTriggerToPopover() {\n    return triggerRef.current && ownerDocument\n      ? triggerRef.current === ownerDocument.activeElement\n      : false;\n  }\n\n  function focusFirstPopoverTabbable(event: KeyboardEvent) {\n    const elements = popoverRef.current && tabbable(popoverRef.current);\n    if (elements && elements[0]) {\n      event.preventDefault();\n      elements[0].focus();\n    }\n  }\n\n  function tabbedOutOfPopover() {\n    const inPopover =\n      popoverRef.current && ownerDocument\n        ? popoverRef.current.contains(ownerDocument.activeElement || null)\n        : false;\n    if (inPopover) {\n      const elements = popoverRef.current && tabbable(popoverRef.current);\n      return Boolean(\n        elements &&\n          ownerDocument &&\n          elements[elements.length - 1] === ownerDocument.activeElement\n      );\n    }\n    return false;\n  }\n\n  function focusTabbableAfterTrigger(event: KeyboardEvent) {\n    const elementAfterTrigger = getElementAfterTrigger();\n    if (elementAfterTrigger) {\n      event.preventDefault();\n      elementAfterTrigger.focus();\n    }\n  }\n\n  function shiftTabbedFromElementAfterTrigger(event: KeyboardEvent) {\n    if (!event.shiftKey) return;\n    const elementAfterTrigger = getElementAfterTrigger();\n    return event.target === elementAfterTrigger;\n  }\n\n  function focusLastTabbableInPopover(event: KeyboardEvent) {\n    const elements = popoverRef.current && tabbable(popoverRef.current);\n    const last = elements && elements[elements.length - 1];\n    if (last) {\n      event.preventDefault();\n      last.focus();\n    }\n  }\n\n  function shiftTabbedOutOfPopover(event: KeyboardEvent) {\n    const elements = popoverRef.current && tabbable(popoverRef.current);\n    if (elements) {\n      return elements.length === 0 ? false : event.target === elements[0];\n    }\n    return false;\n  }\n\n  function focusTriggerRef(event: KeyboardEvent) {\n    event.preventDefault();\n    triggerRef.current?.focus();\n  }\n\n  function tabbedToBrowserChrome(event: KeyboardEvent) {\n    const elements =\n      ownerDocument && popoverRef.current\n        ? tabbable(ownerDocument).filter(\n            (element) => !popoverRef.current!.contains(element)\n          )\n        : null;\n    return elements ? event.target === elements[elements.length - 1] : false;\n  }\n\n  function shiftTabbedToBrowserChrome(event: KeyboardEvent) {\n    // we're assuming the popover will never contain the first tabbable\n    // element, and it better not, because the trigger needs to be tabbable!\n    return ownerDocument ? event.target === tabbable(ownerDocument)[0] : false;\n  }\n\n  let restoreTabIndexTuplés: [HTMLElement, number][] = [];\n\n  function disableTabbablesInPopover() {\n    const elements = popoverRef.current && tabbable(popoverRef.current);\n    if (elements) {\n      elements.forEach((element) => {\n        restoreTabIndexTuplés.push([element, element.tabIndex]);\n        element.tabIndex = -1;\n      });\n      ownerDocument &&\n        ownerDocument.addEventListener(\"focusin\", enableTabbablesInPopover);\n    }\n  }\n\n  function enableTabbablesInPopover() {\n    ownerDocument &&\n      ownerDocument.removeEventListener(\"focusin\", enableTabbablesInPopover);\n    restoreTabIndexTuplés.forEach(([element, tabIndex]) => {\n      element.tabIndex = tabIndex;\n    });\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\nexport type Position = (\n  targetRect?: PRect | null,\n  popoverRect?: PRect | null,\n  ...unstable_observableNodes: PossibleNode[]\n) => React.CSSProperties;\n\ntype PossibleNode = null | undefined | HTMLElement | SVGElement;\n"],"names":["Popover","forwardRef","props","ref","React","Portal","PopoverImpl","forwardedRef","targetRef","position","positionDefault","unstable_observableRefs","popoverRef","useRef","popoverRect","useRect","targetRect","useForkedRef","triggerRef","ownerDocument","getOwnerDocument","current","handleKeyDown","event","key","tabbable","length","shiftKey","elementAfterTrigger","getElementAfterTrigger","target","shiftTabbedFromElementAfterTrigger","elements","last","preventDefault","focus","focusLastTabbableInPopover","shiftTabbedOutOfPopover","focusTriggerRef","shiftTabbedToBrowserChrome","disableTabbablesInPopover","activeElement","focusFirstPopoverTabbable","contains","Boolean","tabbedOutOfPopover","focusTabbableAfterTrigger","filter","element","tabbedToBrowserChrome","targetIndex","indexOf","useEffect","addEventListener","removeEventListener","restoreTabIndexTuplés","forEach","push","tabIndex","enableTabbablesInPopover","useSimulateTabNavigationForReactTree","style","getStyles","map","visibility","getTopPosition","top","getCollisions","directionUp","height","window","pageYOffset","left","directionRight","right","width","pageXOffset","offsetLeft","offsetBottom","collisions","innerWidth","bottom","innerHeight","directionLeft","directionDown"],"mappings":"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"}